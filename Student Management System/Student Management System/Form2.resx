<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gAoxjxoCGijxoxDRRRRgNFFFAQ0UUaMD/9k=
</value>
  </data>
</root>